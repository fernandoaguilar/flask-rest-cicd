test (python 3.5):
  image: python:3.5
  script:
    # this configures Django application to use attached postgres database that is run on `postgres` host
    - export DATABASE_URL=postgres://postgres:@postgres:5432/python-test-app
    - apt-get update -qy
    - apt-get install -y python-dev python-pip python3-pip
    - pip install -r requirements.txt
    - tox -e py35
test (python 3.6):
  image: python:3.6
  script:
    # this configures Django application to use attached postgres database that is run on `postgres` host
    - export DATABASE_URL=postgres://postgres:@postgres:5432/python-test-app
    - apt-get update -qy
    - apt-get install -y python-dev python-pip
    - pip install -r requirements.txt
    - tox -e py36

staging:
  image: python:3.6
  type: deploy
  variables:
    PROJECT_ENV: develop
  environment: staging
  script:
    - pip install awsebcli --upgrade --ignore-installed
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    - touch ~/.aws/config
    - printf "[profile eb-cli]\nregion=ap-southeast-1\noutput=json" >> ~/.aws/config
    - eb init FlaskGitlabCi-staging -p python -r us-east-1
    - eb use FlaskGitlabCi-staging
    - eb deploy FlaskGitlabCi-staging -l FlaskGitlabCi-staging-$CI_COMMIT_SHA
  only:
  - develop

production:
  type: deploy
  script:
  - apt-get update -qy
  - apt-get install -y - python-dev python-pip
  - pip install awsebcli --upgrade --user
  - eb deploy --env-group-suffix prod
  only:
  - master
